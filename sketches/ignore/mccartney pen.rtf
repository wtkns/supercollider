{\rtf1\ansi\ansicpg1252\cocoartf1138\cocoasubrtf230
{\fonttbl\f0\fswiss\fcharset0 Optima-Regular;}
{\colortbl;\red255\green255\blue255;\red173\green0\blue0;\red0\green0\blue188;\red77\green77\blue77;
}
\deftab720
\pard\pardeftab720

\f0\fs28 \cf0 (\
\pard\pardeftab720
\cf2 // By James McCartney\
\pard\pardeftab720
\cf3 var\cf0  w, h = 700, v = 700, seed, run = \cf3 true\cf0 , phase = 0;\
w = \cf3 Window\cf0 (\cf4 "wedge"\cf0 , \cf3 Rect\cf0 (40, 40, h, v), \cf3 false\cf0 );\
w.view.background = \cf3 Color\cf0 .rand(0,0.3);\
w.onClose = \{ run = \cf3 false\cf0  \}; \cf2 // stop the thread on close\
\pard\pardeftab720
\cf0 w.front;\
\pard\pardeftab720
\cf2 // store an initial seed value for the random generator\
\pard\pardeftab720
\cf0 seed = \cf3 Date\cf0 .seed;\
w.drawHook = \{\
	\cf3 Pen\cf0 .width = 2;\
	\cf3 Pen\cf0 .use \{\
		\cf2 // reset this thread's seed for a moment\
\cf0 		\cf3 thisThread\cf0 .randSeed = \cf3 Date\cf0 .seed;\
		\cf2 // now a slight chance of a new seed or background color\
\cf0 		if (0.006.coin) \{ seed = \cf3 Date\cf0 .seed; \};\
		if (0.02.coin) \{ w.view.background = \cf3 Color\cf0 .rand(0,0.3); \};\
		\cf2 // either revert to the stored seed or set the new one\
\cf0 		\cf3 thisThread\cf0 .randSeed = seed;\
		\cf2 // the random values below will be the same each time if the seed has not changed\
\cf0 		\cf2 // only the phase value has advanced\
\cf0 		\cf3 Pen\cf0 .translate(h/2, v/2);\
		\cf2 // rotate the whole image\
\cf0 		\cf2 // negative random values rotate one direction, positive the other\
\cf0 		\cf3 Pen\cf0 .rotate(phase * 1.0.rand2);\
		\cf2 // scale the rotated y axis in a sine pattern\
\cf0 		\cf3 Pen\cf0 .scale(1, 0.3 * sin(phase * 1.0.rand2 + 2pi.rand) + 0.5 );\
		\cf2 // create a random number of annular wedges\
\cf0 		rrand(6,24).do \{\
			\cf3 Pen\cf0 .color = \cf3 Color\cf0 .rand(0.0,1.0).alpha_(rrand(0.1,0.7));\
			\cf3 Pen\cf0 .beginPath;\
			\cf3 Pen\cf0 .addAnnularWedge(\cf3 Point\cf0 (0,0), a = rrand(60,300), a + 50.rand2, 2pi.rand\'a0\
				+ (phase * 2.0.rand2), 2pi.rand);\
			if (0.5.coin) \{\cf3 Pen\cf0 .stroke\}\{\cf3 Pen\cf0 .fill\};\
		\};\
	\};\
\};\
\
\pard\pardeftab720
\cf2 // fork a thread to update 20 times a second, and advance the phase each time\
\pard\pardeftab720
\cf0 \{ while \{ run \} \{ w.refresh; 0.05.wait; phase = phase + 0.01pi;\} \}.fork(\cf3 AppClock\cf0 )\
\
)\
}